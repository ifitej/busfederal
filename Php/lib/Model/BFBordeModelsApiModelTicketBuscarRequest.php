<?php
/**
 * BFBordeModelsApiModelTicketBuscarRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BF.Borde.Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * BFBordeModelsApiModelTicketBuscarRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BFBordeModelsApiModelTicketBuscarRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BF.Borde.Models.ApiModel.TicketBuscarRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'uuid_respuesta' => 'string',
'fecha_desde' => '\DateTime',
'fecha_hasta' => '\DateTime',
'origen' => '\Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem',
'destino' => '\Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem',
'numero_pagina' => 'int',
'registros_por_pagina' => 'int'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'uuid_respuesta' => null,
'fecha_desde' => 'date-time',
'fecha_hasta' => 'date-time',
'origen' => null,
'destino' => null,
'numero_pagina' => 'int32',
'registros_por_pagina' => 'int32'    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'uuid_respuesta' => 'uuid_respuesta',
'fecha_desde' => 'fechaDesde',
'fecha_hasta' => 'fechaHasta',
'origen' => 'origen',
'destino' => 'destino',
'numero_pagina' => 'numeroPagina',
'registros_por_pagina' => 'registrosPorPagina'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'uuid_respuesta' => 'setUuidRespuesta',
'fecha_desde' => 'setFechaDesde',
'fecha_hasta' => 'setFechaHasta',
'origen' => 'setOrigen',
'destino' => 'setDestino',
'numero_pagina' => 'setNumeroPagina',
'registros_por_pagina' => 'setRegistrosPorPagina'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'uuid_respuesta' => 'getUuidRespuesta',
'fecha_desde' => 'getFechaDesde',
'fecha_hasta' => 'getFechaHasta',
'origen' => 'getOrigen',
'destino' => 'getDestino',
'numero_pagina' => 'getNumeroPagina',
'registros_por_pagina' => 'getRegistrosPorPagina'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['uuid_respuesta'] = isset($data['uuid_respuesta']) ? $data['uuid_respuesta'] : null;
        $this->container['fecha_desde'] = isset($data['fecha_desde']) ? $data['fecha_desde'] : null;
        $this->container['fecha_hasta'] = isset($data['fecha_hasta']) ? $data['fecha_hasta'] : null;
        $this->container['origen'] = isset($data['origen']) ? $data['origen'] : null;
        $this->container['destino'] = isset($data['destino']) ? $data['destino'] : null;
        $this->container['numero_pagina'] = isset($data['numero_pagina']) ? $data['numero_pagina'] : null;
        $this->container['registros_por_pagina'] = isset($data['registros_por_pagina']) ? $data['registros_por_pagina'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets uuid_respuesta
     *
     * @return string
     */
    public function getUuidRespuesta()
    {
        return $this->container['uuid_respuesta'];
    }

    /**
     * Sets uuid_respuesta
     *
     * @param string $uuid_respuesta uuid_respuesta
     *
     * @return $this
     */
    public function setUuidRespuesta($uuid_respuesta)
    {
        $this->container['uuid_respuesta'] = $uuid_respuesta;

        return $this;
    }

    /**
     * Gets fecha_desde
     *
     * @return \DateTime
     */
    public function getFechaDesde()
    {
        return $this->container['fecha_desde'];
    }

    /**
     * Sets fecha_desde
     *
     * @param \DateTime $fecha_desde fecha_desde
     *
     * @return $this
     */
    public function setFechaDesde($fecha_desde)
    {
        $this->container['fecha_desde'] = $fecha_desde;

        return $this;
    }

    /**
     * Gets fecha_hasta
     *
     * @return \DateTime
     */
    public function getFechaHasta()
    {
        return $this->container['fecha_hasta'];
    }

    /**
     * Sets fecha_hasta
     *
     * @param \DateTime $fecha_hasta fecha_hasta
     *
     * @return $this
     */
    public function setFechaHasta($fecha_hasta)
    {
        $this->container['fecha_hasta'] = $fecha_hasta;

        return $this;
    }

    /**
     * Gets origen
     *
     * @return \Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem
     */
    public function getOrigen()
    {
        return $this->container['origen'];
    }

    /**
     * Sets origen
     *
     * @param \Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem $origen origen
     *
     * @return $this
     */
    public function setOrigen($origen)
    {
        $this->container['origen'] = $origen;

        return $this;
    }

    /**
     * Gets destino
     *
     * @return \Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem
     */
    public function getDestino()
    {
        return $this->container['destino'];
    }

    /**
     * Sets destino
     *
     * @param \Swagger\Client\Model\BFBordeModelsApiModelTicketCausaItem $destino destino
     *
     * @return $this
     */
    public function setDestino($destino)
    {
        $this->container['destino'] = $destino;

        return $this;
    }

    /**
     * Gets numero_pagina
     *
     * @return int
     */
    public function getNumeroPagina()
    {
        return $this->container['numero_pagina'];
    }

    /**
     * Sets numero_pagina
     *
     * @param int $numero_pagina numero_pagina
     *
     * @return $this
     */
    public function setNumeroPagina($numero_pagina)
    {
        $this->container['numero_pagina'] = $numero_pagina;

        return $this;
    }

    /**
     * Gets registros_por_pagina
     *
     * @return int
     */
    public function getRegistrosPorPagina()
    {
        return $this->container['registros_por_pagina'];
    }

    /**
     * Sets registros_por_pagina
     *
     * @param int $registros_por_pagina registros_por_pagina
     *
     * @return $this
     */
    public function setRegistrosPorPagina($registros_por_pagina)
    {
        $this->container['registros_por_pagina'] = $registros_por_pagina;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
